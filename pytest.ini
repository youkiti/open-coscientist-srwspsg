[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for different test categories
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that test full workflows
    performance: Performance and load tests
    slow: Tests that take more than 30 seconds
    requires_api: Tests that require real API keys
    mock: Tests that use mocked dependencies

# Coverage settings
addopts = 
    -v
    --tb=short
    --strict-markers
    --cov=coscientist
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=70

# Async settings
asyncio_mode = auto

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*langchain.*:UserWarning
    ignore:.*openai.*:UserWarning

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Log settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution settings (optional, uncomment to enable)
# -n auto  # Use all available CPUs
# --dist loadscope  # Distribute by test module